<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="dataloader" duration-ms="136" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
    <groups>
    </groups>
    <test name="unit-tests" duration-ms="136" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
      <class name="net.cockamamy.dataloader.converter.DatePropertyConverterTest">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="14" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
        <test-method status="PASS" signature="testConvertValueFailure(java.lang.String)" name="testConvertValueFailure" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[aaa]]>
              </value>
            </param>
          </params>
          <exception class="net.cockamamy.dataloader.PropertyConversionException">
            <message>
              <![CDATA[Unable to convert aaa to java.util.Date.]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.cockamamy.dataloader.PropertyConversionException: Unable to convert aaa to java.util.Date.
	at net.cockamamy.dataloader.converter.DatePropertyConverter.convertValue(DatePropertyConverter.java:87)
	at net.cockamamy.dataloader.converter.DatePropertyConverter.convertValue(DatePropertyConverter.java:21)
	at net.cockamamy.dataloader.converter.AbstractPropertyConverterTest.testConvertValueFailure(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[01/01/2008]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tue Jan 01 00:00:00 EST 2008]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.util.FileUtilitiesTest">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="85" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
        <test-method status="PASS" signature="testOpenFileNotFound()" name="testOpenFileNotFound" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[-Tmp- does not contain 5bba64da-e217-46be-9fb9-a91bf5d77eb1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: -Tmp- does not contain 5bba64da-e217-46be-9fb9-a91bf5d77eb1
	at net.cockamamy.dataloader.util.FileUtilities.openFile(FileUtilities.java:91)
	at net.cockamamy.dataloader.util.FileUtilitiesTest.testOpenFileNotFound(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testOpenFileSuccess()" name="testOpenFileSuccess" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
        <test-method status="PASS" signature="cleanup()" name="cleanup" is-config="true" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.util.StringUtilitiesTest">
        <test-method status="PASS" signature="testIsBlank(java.lang.String, boolean)" name="testIsBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[        ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsBlank(java.lang.String, boolean)" name="testIsBlank" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsBlank(java.lang.String, boolean)" name="testIsBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsBlank(java.lang.String, boolean)" name="testIsBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsNotBlank(java.lang.String, boolean)" name="testIsNotBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsBlank(java.lang.String, boolean)" name="testIsBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsNotBlank(java.lang.String, boolean)" name="testIsNotBlank" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[        ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsNotBlank(java.lang.String, boolean)" name="testIsNotBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testToBlank(java.lang.String, java.lang.String)" name="testToBlank" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsNotBlank(java.lang.String, boolean)" name="testIsNotBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsNotBlank(java.lang.String, boolean)" name="testIsNotBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testToBlank(java.lang.String, java.lang.String)" name="testToBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[         ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testToBlank(java.lang.String, java.lang.String)" name="testToBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testToBlank(java.lang.String, java.lang.String)" name="testToBlank" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.converter.EnumPropertyConverterTest">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
        <test-method status="PASS" signature="testConvertValueFailure(java.lang.String)" name="testConvertValueFailure" duration-ms="6" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZOO]]>
              </value>
            </param>
          </params>
          <exception class="net.cockamamy.dataloader.PropertyConversionException">
            <message>
              <![CDATA[Unable to convert ZOO to net.cockamamy.dataloader.converter.MockEnum.]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.cockamamy.dataloader.PropertyConversionException: Unable to convert ZOO to net.cockamamy.dataloader.converter.MockEnum.
	at net.cockamamy.dataloader.converter.EnumPropertyConverter.convertValue(EnumPropertyConverter.java:60)
	at net.cockamamy.dataloader.converter.EnumPropertyConverter.convertValue(EnumPropertyConverter.java:19)
	at net.cockamamy.dataloader.converter.AbstractPropertyConverterTest.testConvertValueFailure(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FOO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FOO]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[BAR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BAR]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.converter.StringPropertyConverterTest">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="3" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="3" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testConvertValueSuccess(java.lang.String, java.lang.Object)" name="testConvertValueSuccess" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.util.CollectionUtilitiesTest">
        <test-method status="PASS" signature="testBuildUnmodifableSet([Ljava.lang.Object;, java.util.Set)" name="testBuildUnmodifableSet" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2c31f2a7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[zoo, foo, bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testBuildUnmodifableSet([Ljava.lang.Object;, java.util.Set)" name="testBuildUnmodifableSet" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testBuildUnmodifiableList([Ljava.lang.Object;, java.util.List)" name="testBuildUnmodifiableList" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@331c89c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[foo, bar, zoo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testBuildUnmodifiableList([Ljava.lang.Object;, java.util.List)" name="testBuildUnmodifiableList" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testBuildUnmodifiableSetFailure([Ljava.lang.Object;)" name="testBuildUnmodifiableSetFailure" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@39697b67]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Attempt to add a duplicate element, foo, to set.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Attempt to add a duplicate element, foo, to set.
	at net.cockamamy.dataloader.util.CollectionUtilities.buildUnmodifiableSet(CollectionUtilities.java:78)
	at net.cockamamy.dataloader.util.CollectionUtilitiesTest.testBuildUnmodifiableSetFailure(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:637)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="net.cockamamy.dataloader.util.ObjectUtilitiesTest">
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[bar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="1" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIsEqualTo(java.lang.Object, java.lang.Object, boolean)" name="testIsEqualTo" duration-ms="0" started-at="2010-09-22T14:20:23Z" finished-at="2010-09-22T14:20:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
